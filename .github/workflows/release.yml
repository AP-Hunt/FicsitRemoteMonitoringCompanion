# This workflow increments the minor version 
# when there is a push to the main branch. It
# also creates a new release for the tag.
# 
# It does not run if the commit has been tagged,
# so that it doesn't get in to an endless loop
# when a tagged commit gets pushed.
on:
    push:
        tags:
            # Tags that look like a semantic version
            - "[0-9]+.[0-9]+.[0-9]+"

name: Release new version
jobs:
    increment_minor_version:
        name: Increment minor version
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v2
              with:
                fetch-depth: 0

            - uses: actions/setup-dotnet@v1
              with:
                dotnet-version: '6.0.x'

            - name: Install dependencies
              run: |
                dotnet restore
                dotnet tool restore

            - name: Set version
              run: |
                echo "NEW_VERSION=$(cat version.txt)" >> $env:GITHUB_ENV 

            - name: Compile release
              run: |
                dotnet cake build.cake --target Publish --configuration Release

            - name: Generate release notes
              run: |
                dotnet cake build.cake --target ReleaseNotes

            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                tag_name: ${{ env.NEW_VERSION }}
                release_name: "Version ${{ env.NEW_VERSION }}"
                draft: false
                prerelease: false
                body_path: ReleaseNotes.md

            - name: Upload assets
              id: upload_assets
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                gh release upload "${{ env.NEW_VERSION }}" "./bin/publish/FicsitRemoteMonitoringCompanion-v${{env.NEW_VERSION}}.zip"